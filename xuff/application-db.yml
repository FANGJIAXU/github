spring:     
    datasource:
      druid:
#        url: jdbc:mysql://10.202.228.31:3306/itsm?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
#        username: root
#        password: maxnerva
        url: jdbc:mysql://127.0.0.1:3306/19test0321?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: sa123
        initial-size: 10
        max-active: 100
        min-idle: 10
        max-wait: 60000
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 1 FROM DUAL
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          login-username: admin
          login-password: admin
        filter:
          stat:
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
            multi-statement-allow: true
    redis:
      host: 127.0.0.1
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          min-idle: 0
          max-idle: 8
    data:
      mongodb:
        host: 127.0.0.1
#    data:
#      mongodb:
#        host: 10.202.228.30
#        username: maxnerva
#        password: maxnerva
#        database: cmdb
      elasticsearch:
        cluster-name: docker-cluster
        cluster-nodes: 127.0.0.1:9300
        repositories:
          enabled: true
    elasticsearch:
      jest:
        connection-timeout: 20000s
        read-timeout: 20000s
        uris: http://127.0.0.1:9200
      rest:
        uris: http://127.0.0.1:9200
    rabbitmq:
      host: 127.0.0.1
      username: guest
      password: guest
    kafka:
      consumer:
        bootstrap-servers: 121.199.59.216:9092
        auto-offset-reset: earliest
        enable-auto-commit: true
        key-desherializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      producer:
        bootstrap-servers: 121.199.59.216:9092
        retries: 0
        batch-size: 4096
        buffer-memory: 409600
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
    quartz:
      properties:
        org:
          quartz:
            scheduler:
              instanceId: AUTO
            jobStore:
              class: org.quartz.impl.jdbcjobstore.JobStoreTX
              driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
              tablePrefix: QRTZ_
              isClustered: true
              clusterCheckinInterval: 10000
              useProperties: false
            threadPool:
              class: org.quartz.simpl.SimpleThreadPool
              threadCount: 10
              threadPriority: 5
              threadsInheritContextClassLoaderOfInitializingThread: true
      job-store-type: jdbc
      jdbc:
        initialize-schema: embedded
feign:
    hystrix:
      enabled: true
    connectTimeOutMillis: 5000
    readTimeOutMillis: 5000
hystrix:
    command:
      default:
        execution:
          isolation:
            strategy: SEMAPHORE
            thread:
              timeoutInMilliseconds: 5000
mybatis-plus:
    mapper-locations: classpath*:mapper/*Mapper.xml
    configuration:
        call-setters-on-nulls: true

thread:
    pool:
      corePoolSize: 10
      maxiPoolSize: 20
      keepAliveTime: 0








